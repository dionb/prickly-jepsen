apiVersion: v1
kind: Service
metadata:
  name: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: keycloak
  labels:
    app: keycloak
    app.kubernetes.io/name: keycloak
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: default
rules:
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
      - endpoints
      - services
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app: keycloak
  name: keycloak
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: keycloak
subjects:
  - kind: ServiceAccount
    name: keycloak
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  replicas: 3
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      serviceAccountName: keycloak
      imagePullSecrets: 
      - name: regcred
      containers:
      - name: keycloak
        image: jboss/keycloak:10.0.2
        envFrom:
        - configMapRef:
            name: keycloak-env
        - secretRef:
            name: keycloak-admin-user
        - secretRef: 
            name: keycloak-postgres-user
        env:
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
        - name: JGROUPS_DISCOVERY_PROTOCOL
          value: kubernetes.KUBE_PING
        - name: KUBERNETES_LABELS
          value: app=keycloak
        - name: JGROUPS_DISCOVERY_PROPERTIES
          value: labels="app=keycloak"
        #   value: dns_query=keycloak.default.svc.cluster.local
        ports:
        - name: http
          containerPort: 8080
        - name: https
          containerPort: 8443
        readinessProbe:
          httpGet:
            path: /auth/realms/master
            port: 8080
